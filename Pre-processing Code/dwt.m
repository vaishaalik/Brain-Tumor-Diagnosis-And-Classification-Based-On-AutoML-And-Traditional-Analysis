function results = myimfcn(im)
%Image Processing Function
%
% IM      - Input image.
% RESULTS - A scalar structure with the processing results.
%

%--------------------------------------------------------------------------
% Auto-generated by imageBatchProcessor App. 
%
% When used by the App, this function will be called for every input image
% file automatically. IM contains the input image as a matrix. RESULTS is a
% scalar structure containing the results of this processing function.
%
%--------------------------------------------------------------------------



% Replace the sample below with your code----------------------------------
I = im
J = imnoise(I, 'gaussian');
type = 'h';

[cA1, cH1, cV1, cD1] = dwt2(J, 'haar');
[cA2, cH2, cV2, cD2] = dwt2(cA1, 'haar');
[cA3, cH3, cV3, cD3] = dwt2(cA2, 'haar');




T_cH3 = sigthresh(cH3, 3, cH3);
T_cV3 = sigthresh(cH3, 3, cV3);
T_cD3 = sigthresh(cH3, 3, cD3);
Y_cH3 = wthresh(cH3,type,T_cH3);
Y_cV3 = wthresh(cV3,type,T_cV3);
Y_cD3 = wthresh(cD3,type,T_cD3);



T_cH2 = sigthresh(cH2, 2, cH2);
T_cV2 = sigthresh(cH2, 2, cV2);
T_cD2 = sigthresh(cH2, 2, cD2);
Y_cH2 = wthresh(cH2,type,T_cH2);
Y_cV2 = wthresh(cV2,type,T_cV2);
Y_cD2 = wthresh(cD2,type,T_cD2);



T_cH1 = sigthresh(cH1, 1, cH1);
T_cV1 = sigthresh(cH1, 1, cV1);
T_cD1 = sigthresh(cH1, 1, cD1);
Y_cH1 = wthresh(cH1,type,T_cH1);
Y_cV1 = wthresh(cV1,type,T_cV1);
Y_cD1 = wthresh(cD1,type,T_cD1);



Y_cA2 = idwt2(cA3, Y_cH3, Y_cV3, Y_cD3, 'haar');
Y_cA1 = idwt2(cA2, Y_cH2, Y_cV2, Y_cD2, 'haar');
Y_J = idwt2(Y_cA1, Y_cH1, Y_cV1, Y_cD1, 'haar');


error_diff = I-uint8(Y_J);
decibels = 20*log10(1/(sqrt(mean(mean(error_diff.^2)))));





    function [T] = sigthresh(M, level, test_matrix)
    %[a,b] = size(M);
    %M is only HH band
        C = 0.6745;
        variance = (median(abs(M(:)))/C)^2;
        beta = sqrt(log(length(M)/level));
        T = beta*variance/std2(test_matrix);
    
    end
results = uint8(Y_J)
end 
%--------------------------------------------------------------------------
